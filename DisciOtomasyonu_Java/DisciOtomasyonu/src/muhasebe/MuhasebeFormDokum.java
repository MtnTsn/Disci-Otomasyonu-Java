/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MuhasebeFormDokum.java
 *
 * Created on 17.Ara.2011, 12:06:42
 */
package muhasebe;

import com.mysql.jdbc.ResultSetMetaData;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ercan
 */
public class MuhasebeFormDokum extends javax.swing.JFrame {

    /** Creates new form MuhasebeFormDokum */
    public MuhasebeFormDokum() {
        initComponents();
        this.setIconImage(new ImageIcon("disci.jpg").getImage());
        baglanDB();



        //  this.getContentPane().add(new MuhasebePanelDokum());
        this.setSize(640, 480);
        this.setLocation(400, 300);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        dokumGunluk = new com.toedter.calendar.JDateChooser("dd/MM/yyyy","##/##/####",'_');
        jLabel2 = new javax.swing.JLabel();
        dokumAy_yil = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dokumAy = new com.toedter.calendar.JMonthChooser();
        dokumYil = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dokumTablo = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        giderSecili = new javax.swing.JCheckBox();
        gelirSecili = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Muhasebe Dökümü");

        dokumGunluk.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dokumGunlukPropertyChange(evt);
            }
        });

        jLabel2.setText("Günlük");

        dokumAy_yil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2008", "2009", "2010", "2011", "2012" }));
        dokumAy_yil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dokumAy_yilFocusGained(evt);
            }
        });

        jLabel3.setText("Aylık");

        jLabel4.setText("Yıllık");

        dokumAy.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dokumAyPropertyChange(evt);
            }
        });

        dokumYil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2008", "2009", "2010", "2011", "2012" }));
        dokumYil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dokumYilFocusGained(evt);
            }
        });

        jButton1.setText("Göster");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dokumTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(dokumTablo);

        jButton2.setText("Geri");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        giderSecili.setText("Gider");
        giderSecili.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                giderSeciliMouseClicked(evt);
            }
        });

        gelirSecili.setText("Gelir");
        gelirSecili.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gelirSeciliMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(dokumGunluk, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(dokumAy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dokumAy_yil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dokumYil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel4)))
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(giderSecili)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(38, 38, 38)
                .addComponent(gelirSecili)
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(454, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dokumAy_yil)
                                .addComponent(dokumYil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dokumAy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gelirSecili)
                                    .addComponent(giderSecili)))))
                    .addComponent(dokumGunluk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    boolean gunSecim = false;
    boolean aylikSecim =false;
    boolean yillikSecim = false;
      boolean giderSecildi =false;
    boolean gelirSecildi = false;
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
if(gunSecim==false && aylikSecim==false && yillikSecim==false){
JOptionPane.showMessageDialog(null, "Herhangi bir zaman seçiniz !");
return;
}
else{
    try {

        java.sql.Connection conn = null;
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost/disci?useUnicode=true&characterEncoding=UTF-8", "root", "");
        Statement komut = (Statement) conn.createStatement();
        ResultSet donenDeger = null;
//


        //
        if (aylikSecim==true && gunSecim == false && yillikSecim == false) {
            System.out.println("aylık baglantısı ");
            DefaultTableModel model = (DefaultTableModel) dokumTablo.getModel();
            model.setNumRows(0);
            String ay_yil = (dokumAy.getMonth() + 1) + "/" + dokumAy_yil.getSelectedItem().toString();

      if(giderSecili.isSelected()  && gelirSecili.isSelected()==false){
          donenDeger = komut.executeQuery("select  TARIH,TOPLAM_BORC,ACIKLAMA,ODENEN from cari where  AY_YIL='" + ay_yil + "'");
           
      }else if(gelirSecili.isSelected()  && giderSecili.isSelected()==false){
          donenDeger = komut.executeQuery("select  TARIH,KIMDEN,ACIKLAMA,ALINAN from carigelir where  AY_YIL='" + ay_yil + "'");

           }

        } else if (aylikSecim == false && yillikSecim == false && gunSecim==true ) {
            //conn kapatma

            DefaultTableModel model = (DefaultTableModel) dokumTablo.getModel();
            model.setNumRows(0);
            DateFormat dateF = new SimpleDateFormat("dd/MM/yyyy");
            if(dokumGunluk.getDate()==null){return;}
            String gun = dateF.format(dokumGunluk.getDate()).toString();
          
           if(giderSecili.isSelected()  && gelirSecili.isSelected()==false){
            donenDeger = komut.executeQuery("select TARIH,TOPLAM_BORC,ACIKLAMA,ODENEN from cari where  TARIH='" + gun + "'");
           }else if(gelirSecili.isSelected()  && giderSecili.isSelected()==false){
          donenDeger = komut.executeQuery("select  TARIH,KIMDEN,ACIKLAMA,ALINAN from carigelir where  TARIH='" + gun + "'");

           }

        } else if (gunSecim == false && aylikSecim == false && yillikSecim==true) {
            //conn kapatma
            DefaultTableModel model = (DefaultTableModel) dokumTablo.getModel();
            model.setNumRows(0);
            String yil = dokumYil.getSelectedItem().toString();

            if(giderSecili.isSelected()  && gelirSecili.isSelected()==false){
            donenDeger = komut.executeQuery("select  TARIH,TOPLAM_BORC,ACIKLAMA,ODENEN from cari where  YIL='" + yil + "'");
            }
            else if(gelirSecili.isSelected()  && giderSecili.isSelected()==false){
          donenDeger = komut.executeQuery("select  TARIH,KIMDEN,ACIKLAMA,ALINAN from carigelir where  YIL='" + yil+ "'");

           }
        }

        if (donenDeger != null) {
            if (aylikSecim==true || gunSecim==true || yillikSecim==true) {
                ResultSetMetaData meta = (ResultSetMetaData) donenDeger.getMetaData();
                int column = meta.getColumnCount();
                Vector baslik = new Vector();
                for (int i = 1; i <= column; i++) {
                    baslik.addElement(meta.getColumnName(i));

                }
                Vector kayit = new Vector();
                while (donenDeger.next()) {

                    Vector satirkayit = new Vector();
                    for (int i = 1; i <= column; i++) {
                        satirkayit.addElement(donenDeger.getString(i));
                    }
                    kayit.addElement(satirkayit);

                }
                conn.close();
                DefaultTableModel dtm = new DefaultTableModel(kayit, baslik);
                dokumTablo.setModel(dtm);

            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(AylikKarZarar.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(AylikKarZarar.class.getName()).log(Level.SEVERE, null, ex);
    }



//   DefaultTableModel model=(DefaultTableModel) dokumTablo.getModel();
//    model.setNumRows(0);


}

}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
    new MuhasebeAnaForm().setVisible(true);
}//GEN-LAST:event_jButton2ActionPerformed

private void dokumYilFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dokumYilFocusGained
    // TODO add your handling code here:
    yillikSecim = true;
    aylikSecim = false;
    gunSecim = false;
}//GEN-LAST:event_dokumYilFocusGained

private void dokumAy_yilFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dokumAy_yilFocusGained
    // TODO add your handling code here:
    System.out.println("ay ın yıllıgı");
    aylikSecim = true;
    yillikSecim = false;
    gunSecim = false;
}//GEN-LAST:event_dokumAy_yilFocusGained

private void dokumGunlukPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dokumGunlukPropertyChange
    // TODO add your handling code here:

      aylikSecim =false;
    yillikSecim = false;
    gunSecim = true;

   
}//GEN-LAST:event_dokumGunlukPropertyChange

private void dokumAyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dokumAyPropertyChange
    // TODO add your handling code here:
     // TODO add your handling code here:
    System.out.println("aylık butoınu");
    aylikSecim = true;
    yillikSecim = false;
    gunSecim = false;
}//GEN-LAST:event_dokumAyPropertyChange

private void gelirSeciliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gelirSeciliMouseClicked
    // TODO add your handling code here:
 
    giderSecili.setSelected(false);
}//GEN-LAST:event_gelirSeciliMouseClicked

private void giderSeciliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_giderSeciliMouseClicked
    // TODO add your handling code here:


    gelirSecili.setSelected(false);
}//GEN-LAST:event_giderSeciliMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MuhasebeFormDokum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MuhasebeFormDokum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MuhasebeFormDokum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MuhasebeFormDokum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MuhasebeFormDokum().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JMonthChooser dokumAy;
    private javax.swing.JComboBox dokumAy_yil;
    private com.toedter.calendar.JDateChooser dokumGunluk;
    private javax.swing.JTable dokumTablo;
    private javax.swing.JComboBox dokumYil;
    private javax.swing.JCheckBox gelirSecili;
    private javax.swing.JCheckBox giderSecili;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void baglanDB() {
        try {
            java.sql.Connection conn = null;
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost/disci?useUnicode=true&characterEncoding=UTF-8", "root", "");
            Statement komut = (Statement) conn.createStatement();
            ResultSet donenDeger = komut.executeQuery("select YIL from cari group by YIL ");
            DefaultComboBoxModel cmd = new DefaultComboBoxModel();
        
            while (donenDeger.next()) {
                cmd.addElement(donenDeger.getString(1));
             
            }
          
            dokumAy_yil.setModel(cmd);
            dokumYil.setModel(cmd);
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(MuhasebeFormDokum.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MuhasebeFormDokum.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
