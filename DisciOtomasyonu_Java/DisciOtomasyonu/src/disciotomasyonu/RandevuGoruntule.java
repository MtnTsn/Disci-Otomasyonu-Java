/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RandevuGoruntule.java
 *
 * Created on 18.Ara.2011, 15:28:14
 */

package disciotomasyonu;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.ResultSetMetaData;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mustafa
 */
public class RandevuGoruntule extends javax.swing.JFrame {

    /** Creates new form RandevuGoruntule */
    boolean doktor=false;
    int doktorid;
    public RandevuGoruntule() {
        initComponents();
        this.setLocation(300,200);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("disci.jpg"));
    }

    RandevuGoruntule(int id) {
       this.doktorid=id;
         initComponents();
         doktor=true;
        this.setLocation(300,200);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("disci.jpg"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Aylik Randevu Görüntüle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Günlük Randevu Görüntüle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Kapat");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2)
                        .addGap(64, 64, 64)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        randevuGoruntule();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        RandevuGunluk();
    }//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
    this.setVisible(false);
    
}//GEN-LAST:event_jButton3ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RandevuGoruntule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void randevuGoruntule() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/disci?useUnicode=true&characterEncoding=UTF-8", "root", "");
            Statement komut = conn.createStatement();
            ResultSet rs = komut.executeQuery("select * from randevu2 order by Sirano ASC");
            ResultSetMetaData meta = (ResultSetMetaData) rs.getMetaData();
            int column = meta.getColumnCount();
            Vector baslik = new Vector();
            for (int i = 1; i <= column; i++) {
                baslik.addElement(meta.getColumnName(i));
            }
            DateFormat df= new SimpleDateFormat("MM/yyyy");
            String gun=df.format(new Date());
            Vector kayitlar = new Vector();
            while (rs.next()) {
            String gunkayit=rs.getString("randevutarihi").substring(3,10);
                Vector satir = new Vector();
                for (int i = 1; i <= column; i++) {
                    if(gun.equals(gunkayit)){
                    satir.addElement(rs.getString(i));}
                }
                if(!satir.isEmpty()){
                kayitlar.addElement(satir);}
            }
            DefaultTableModel dtm = new DefaultTableModel(kayitlar,baslik);
            jTable1.setModel(dtm);
        } catch (SQLException ex) {
            System.out.println("hata:"+ex.getMessage());
            ex.printStackTrace();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RandevuGoruntule.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void RandevuGunluk() {
         ResultSet rs=null;
          try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/disci?useUnicode=true&characterEncoding=UTF-8", "root", "");
            Statement komut = conn.createStatement();
            DateFormat df= new SimpleDateFormat("dd/MM/yyyy");
            String gun=df.format(new Date());
           if(!doktor){
         rs = komut.executeQuery("select * from randevu2 where randevutarihi='"+gun+"' order by Sirano ASC");}
           else{
                rs = komut.executeQuery("select * from randevu2  where doktorid='"+doktorid+"' AND randevutarihi='"+gun+"' order by Sirano ASC");}
            ResultSetMetaData meta = (ResultSetMetaData) rs.getMetaData();
            int column = meta.getColumnCount();
            Vector baslik = new Vector();
            for (int i = 1; i <= column; i++) {
                baslik.addElement(meta.getColumnName(i));
            }
//            DateFormat df= new SimpleDateFormat("dd");
//            String gun=df.format(new Date());
            Vector kayitlar = new Vector();
            while (rs.next()) {
//                String gunkayit=rs.getString("randevutarihi").substring(0,2);
//                System.out.println(gunkayit);
                Vector satir = new Vector();
                for (int i = 1; i <= column; i++) {
//                    if(gun.equals(gunkayit)){
                    satir.addElement(rs.getString(i));}
//                }
                kayitlar.addElement(satir);
            }
            DefaultTableModel dtm = new DefaultTableModel(kayitlar,baslik);
            jTable1.setModel(dtm);
        } catch (SQLException ex) {
            System.out.println("hata:"+ex.getMessage());
            ex.printStackTrace();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RandevuGoruntule.class.getName()).log(Level.SEVERE, null, ex);
        }


    }

}
